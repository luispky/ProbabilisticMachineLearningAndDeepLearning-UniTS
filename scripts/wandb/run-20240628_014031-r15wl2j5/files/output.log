
Training...








































Epoch: 63 | Loss: 0.0640:  98%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████  | 63/64 [01:20<00:01,  1.17s/it]
Training Finished
Sampling...
Sampling Finished
Epoch: 64 | Loss: 0.0623: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 64/64 [01:21<00:00,  1.28s/it]
128it [00:00, 751.24it/s]
Inpainting...
torch.Size([8000, 2]) torch.Size([8000, 2]) torch.Size([8000])
torch.Size([8000, 2]) torch.Size([8000, 2]) torch.Size([1, 8000])
0it [00:00, ?it/s]
Traceback (most recent call last):
  File "/home/l11/Documents/ProbabilisticMachineLearningProject/scripts/run_diffusion.py", line 122, in <module>
    main()
  File "/home/l11/Documents/ProbabilisticMachineLearningProject/scripts/run_diffusion.py", line 110, in main
    inpainted_data = diffusion.inpaint(diffusion.ema_model, original_data, mask)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/l11/Documents/ProbabilisticMachineLearningProject/src/DenoisingDiffusionPM.py", line 227, in inpaint
    x_t_minus_one = x_known * mask + x_unknown * (~mask)
                    ~~~~~~~~^~~~~~
RuntimeError: The size of tensor a (2) must match the size of tensor b (8000) at non-singleton dimension 1