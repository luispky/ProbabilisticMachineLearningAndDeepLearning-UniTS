
Training...























Epoch: 62 | Loss: 0.0622:  97%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋     | 62/64 [00:47<00:01,  1.30it/s]

Epoch: 64 | Loss: 0.0633: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 64/64 [00:48<00:00,  1.31it/s]
Sampling...
Sampling Finished
Inpainting...
128it [00:00, 793.94it/s]
113it [00:01, 89.16it/s]
128it [00:01, 88.68it/s]
Traceback (most recent call last):
  File "/home/l11/Documents/ProbabilisticMachineLearningProject/scripts/run_diffusion.py", line 279, in <module>
    main_gaussian_data()
  File "/home/l11/Documents/ProbabilisticMachineLearningProject/scripts/run_diffusion.py", line 125, in main_gaussian_data
    save_plot_generated_samples(inpainted_data, inpainted_data_name)
  File "/home/l11/Documents/ProbabilisticMachineLearningProject/src/utils.py", line 301, in save_plot_generated_samples
    plt.scatter(samples[:, 0], samples[:, 1], alpha=0.5)
  File "/home/l11/miniconda3/envs/DL/lib/python3.12/site-packages/matplotlib/pyplot.py", line 3817, in scatter
    __ret = gca().scatter(
            ^^^^^^^^^^^^^^
  File "/home/l11/miniconda3/envs/DL/lib/python3.12/site-packages/matplotlib/__init__.py", line 1473, in inner
    return func(
           ^^^^^
  File "/home/l11/miniconda3/envs/DL/lib/python3.12/site-packages/matplotlib/axes/_axes.py", line 4781, in scatter
    x, y = self._process_unit_info([("x", x), ("y", y)], kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/l11/miniconda3/envs/DL/lib/python3.12/site-packages/matplotlib/axes/_base.py", line 2557, in _process_unit_info
    axis.update_units(data)
  File "/home/l11/miniconda3/envs/DL/lib/python3.12/site-packages/matplotlib/axis.py", line 1741, in update_units
    converter = munits.registry.get_converter(data)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/l11/miniconda3/envs/DL/lib/python3.12/site-packages/matplotlib/units.py", line 167, in get_converter
    x = cbook._unpack_to_numpy(x)
        ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/l11/miniconda3/envs/DL/lib/python3.12/site-packages/matplotlib/cbook.py", line 2391, in _unpack_to_numpy
    xtmp = x.__array__()
           ^^^^^^^^^^^^^
  File "/home/l11/miniconda3/envs/DL/lib/python3.12/site-packages/torch/_tensor.py", line 1087, in __array__
    return self.numpy()
           ^^^^^^^^^^^^
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.